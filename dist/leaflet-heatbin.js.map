{"version":3,"file":"leaflet-heatbin.js","sources":["../src/L.HeatBin.js"],"sourcesContent":["import h337 from 'heatmap.js';\nimport turf from '@turf/turf';\n\nconst HeatBin = (L.Layer ? L.Layer : L.Class).extend({\n\n\t/*--------------------------------------------- LEAFLET HOOKS ---------------------------------------------*/\n\n\tinitialize: function (config) {\n\t\tthis.cfg = config;\n\t\tthis._el = L.DomUtil.create('div', 'leaflet-zoom-hide');\n\t\tthis._data = [];\n\t\tthis._max = 1;\n\t\tthis._min = 0;\n\t\tthis.cfg.container = this._el;\n\t},\n\n\tonAdd: function (map) {\n\t\tvar size = map.getSize();\n\n\t\tthis._map = map;\n\n\t\tthis._width = size.x;\n\t\tthis._height = size.y;\n\n\t\tthis._el.style.width = size.x + 'px';\n\t\tthis._el.style.height = size.y + 'px';\n\t\tthis._el.style.position = 'absolute';\n\n\t\tthis._origin = this._map.layerPointToLatLng(new L.Point(0, 0));\n\n\t\tmap.getPanes().overlayPane.appendChild(this._el);\n\n\t\tif (!this._heatmap) {\n\t\t\tthis._heatmap = h337.create(this.cfg);\n\t\t}\n\n\t\t// this resets the origin and redraws whenever\n\t\t// the zoom changed or the map has been moved\n\t\tmap.on('moveend', this._reset, this);\n\t\tthis._draw();\n\t},\n\n\taddTo: function (map) {\n\t\tmap.addLayer(this);\n\t\treturn this;\n\t},\n\n\tonRemove: function (map) {\n\t\t// remove layer's DOM elements and listeners\n\t\tmap.getPanes().overlayPane.removeChild(this._el);\n\t\tmap.off('moveend', this._reset, this);\n\t},\n\n\t/*--------------------------------------------- PUBLIC ---------------------------------------------*/\n\n\t/**\n\t * Returns leaflet LatLngBounds of the layer data\n\t */\n\tgetLatLngBounds (data) {\n\t\tdata = data || this._data;\n\t\tif (data.length < 1) return null;\n\t\treturn L.latLngBounds(data.map((d) => {\n\t\t\treturn [d[this._latField], d[this._lngField]];\n\t\t}));\n\t},\n\n\tupdate: function() {\n\n\t\tvar bounds, zoom, scale;\n\t\tvar generatedData = { max: this._max, min: this._min, data: [] };\n\n\t\tbounds = this._map.getBounds();\n\t\tzoom = this._map.getZoom();\n\t\tscale = Math.pow(2, zoom);\n\n\t\tif (this._data.length == 0) {\n\t\t\tif (this._heatmap) {\n\t\t\t\tthis._heatmap.setData(generatedData);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tvar latLngPoints = [];\n\t\tvar radiusMultiplier = this.cfg.scaleRadius ? scale : 1;\n\t\tvar localMax = 0;\n\t\tvar localMin = 0;\n\t\tvar valueField = this.cfg.valueField;\n\t\tvar len = this._data.length;\n\n\t\twhile (len--) {\n\t\t\tvar entry = this._data[len];\n\t\t\tvar value = entry[valueField];\n\t\t\tvar latlng = entry.latlng;\n\n\n\t\t\t// we don't wanna render points that are not even on the map ;-)\n\t\t\tif (!bounds.contains(latlng)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// local max is the maximum within current bounds\n\t\t\tlocalMax = Math.max(value, localMax);\n\t\t\tlocalMin = Math.min(value, localMin);\n\n\t\t\tvar point = this._map.latLngToContainerPoint(latlng);\n\t\t\tvar latlngPoint = { x: Math.round(point.x), y: Math.round(point.y) };\n\t\t\tlatlngPoint[valueField] = value;\n\n\t\t\tvar radius;\n\n\t\t\tif (this.cfg.fixedRadius && this.cfg.radiusMeters) {\n\t\t\t\tradius = this._getPixelRadius();\n\t\t\t} else if (entry.radius) {\n\t\t\t\tradius = entry.radius * radiusMultiplier;\n\t\t\t} else {\n\t\t\t\tradius = (this.cfg.radius || 2) * radiusMultiplier;\n\t\t\t}\n\t\t\tlatlngPoint.radius = radius;\n\t\t\tlatLngPoints.push(latlngPoint);\n\t\t}\n\t\tif (this.cfg.useLocalExtrema) {\n\t\t\tgeneratedData.max = localMax;\n\t\t\tgeneratedData.min = localMin;\n\t\t}\n\n\t\tgeneratedData.data = latLngPoints;\n\t\tthis._heatmap.setData(generatedData);\n\t},\n\n\tsetData: function(options) {\n\n\t\tthis._max = options.max || this._max;\n\t\tthis._min = options.min || this._min;\n\t\tthis._maxFactor = this.cfg.heatBin && this.cfg.heatBin.maxFactor ? this.cfg.heatBin.maxFactor : 1;\n\t\tthis._latField = this.cfg.latField || 'lat';\n\t\tthis._lngField = this.cfg.lngField || 'lng';\n\t\tthis._valueField = this.cfg.valueField || 'value';\n\t\tconst self = this;\n\t\tvar data = options.data;\n\n\t\t// compute grid if we're binning\n\t\tif (data.length > 0 && this.cfg.heatBin && this.cfg.heatBin.enabled){\n\t\t\tthis._cellSizeKm = this.cfg.heatBin.cellSizeKm || 5;\n\t\t\tdata = this._computeHeatmapGrid(data);\n\t\t\tthis._max = data.map((d) => { return d.value; }).reduce(function(a, b) { return Math.max(a, b); }) * this._maxFactor;\n\t\t}\n\n\t\tvar len = data.length;\n\t\tvar d = [];\n\n\t\t// transform data to latlngs\n\t\twhile (len--) {\n\t\t\tvar entry = data[len];\n\t\t\tvar latlng = new L.LatLng(entry[self._latField], entry[self._lngField]);\n\t\t\tvar dataObj = { latlng: latlng };\n\t\t\tdataObj[self._valueField] = entry[self._valueField];\n\t\t\tif (entry.radius) {\n\t\t\t\tdataObj.radius = entry.radius;\n\t\t\t}\n\t\t\td.push(dataObj);\n\t\t}\n\n\t\tthis._data = d;\n\t\tthis._draw();\n\t},\n\n\t/*--------------------------------------------- PRIVATE ---------------------------------------------*/\n\n\t_draw: function() {\n\t\tif (!this._map) { return; }\n\n\t\tvar mapPane = this._map.getPanes().mapPane;\n\t\tvar point = mapPane._leaflet_pos;\n\n\t\t// reposition the layer\n\t\tthis._el.style[HeatBin.CSS_TRANSFORM] = 'translate(' +\n\t\t\t-Math.round(point.x) + 'px,' +\n\t\t\t-Math.round(point.y) + 'px)';\n\n\t\tthis.update();\n\t},\n\n\t_getPixelRadius: function () {\n\n\t\tvar centerLatLng = this._map.getCenter();\n\t\tvar pointC = this._map.latLngToContainerPoint(centerLatLng);\n\t\tvar pointX = [pointC.x + 1, pointC.y];\n\n\t\t// convert containerpoints to latlng's\n\t\tvar latLngC = this._map.containerPointToLatLng(pointC);\n\t\tvar latLngX = this._map.containerPointToLatLng(pointX);\n\n\t\t// Assuming distance only depends on latitude\n\t\tvar distanceX = latLngC.distanceTo(latLngX);\n\t\t// 100 meters is the fixed distance here\n\t\tvar pixels = this.cfg.radiusMeters / distanceX;\n\n\t\treturn pixels >= 1 ? pixels : 1;\n\t},\n\n\t_reset: function () {\n\t\tthis._origin = this._map.layerPointToLatLng(new L.Point(0, 0));\n\n\t\tvar size = this._map.getSize();\n\t\tif (this._width !== size.x || this._height !== size.y) {\n\t\t\tthis._width  = size.x;\n\t\t\tthis._height = size.y;\n\n\t\t\tthis._el.style.width = this._width + 'px';\n\t\t\tthis._el.style.height = this._height + 'px';\n\n\t\t\tthis._heatmap._renderer.setDimensions(this._width, this._height);\n\t\t}\n\t\tthis._draw();\n\t},\n\n\t_computeHeatmapGrid (data) {\n\n\t\t// CREATE BBOX\n\t\tconst bounds = this.getLatLngBounds(data);\n\t\tif (!bounds) return false;\n\n\t\t// minX, minY, maxX, maxY\n\t\tconst bbox = [\n\t\t\tbounds.getWest(),\n\t\t\tbounds.getNorth(),\n\t\t\tbounds.getEast(),\n\t\t\tbounds.getSouth()\n\t\t];\n\n\t\tconst bottomLeft = [bounds.getWest(), bounds.getSouth()];\n\t\tconst bottomRight = [bounds.getEast(), bounds.getSouth()];\n\t\tconst topLeft = [bounds.getWest(), bounds.getNorth()];\n\n\t\t// CREATE A GRID OF CELLS\n\t\t// GRID origin is bottomRight\n\t\t// the indexes increment by:\n\t\t// xCol=0, yRow upwards, then xCol=1 etc.\n\t\tconst lengthKm = this._cellSizeKm;\n\t\tconst grid = turf.squareGrid(bbox, lengthKm, { units: 'kilometers' });\n\n\t\tgrid.features.reverse();\n\t\tgrid.features.forEach((f, index) => { f.properties['index'] = index; });\n\t\tconsole.log(grid);\n\n\t\t// DEBUG - plot the binning grid on map\n\t\tif (this.cfg.heatBin && this.cfg.heatBin.showBinGrid) {\n\t\t\tL.geoJSON(grid, {\n\t\t\t\tstyle: function (feature) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tweight: 1,\n\t\t\t\t\t\tfill: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonEachFeature: function (feature, layer) {\n\t\t\t\t\tlayer.bindTooltip(`cell index: ${feature.properties.index}`);\n\t\t\t\t}\n\t\t\t}).addTo(this._map);\n\t\t}\n\n\t\t// calc XY lengths\n\t\tconst xGridLength = turf.distance(turf.point(bottomLeft), turf.point(bottomRight), { units: 'kilometers' });\n\t\tconst yGridLength = turf.distance(turf.point(bottomLeft), turf.point(topLeft), { units: 'kilometers' });\n\t\tconsole.log(`xGridLenth: ${xGridLength}, yGridLenth: ${yGridLength}`);\n\n\t\t// calc XY cell length of grid\n\t\tconst xCellLength = Math.floor(xGridLength / lengthKm);\n\t\tconst yCellLength = Math.floor(yGridLength / lengthKm);\n\t\tconst totalCells = xCellLength * yCellLength;\n\t\tconsole.log(`xCellLenth: ${xCellLength}, yCellLenth: ${yCellLength}`);\n\t\tconsole.log(`total cells: ${totalCells}`);\n\n\t\t// PUT EACH POINT INTO A CELL\n\t\tconst points = data.map((d) => { return {\n\t\t\tlat: d[this._latField],\n\t\t\tlng: d[this._lngField]\n\t\t}; });\n\n\t\t// for each point get its offset from minX and minY\n\t\tpoints.forEach((p) => {\n\n\t\t\t// point dist from left\n\t\t\tconst xDist = turf.distance(\n\t\t\t\tturf.point([p.lng, p.lat]),\n\t\t\t\tturf.point([bounds.getEast(), p.lat]),\n\t\t\t\t{ units: 'kilometers' }\n\t\t\t);\n\t\t\t// point dist from bottom\n\t\t\tconst yDist = turf.distance(\n\t\t\t\tturf.point([p.lng, p.lat]),\n\t\t\t\tturf.point([p.lng, bounds.getSouth()]),\n\t\t\t\t{ units: 'kilometers' }\n\t\t\t);\n\n\t\t\t// find the XY cell indices\n\t\t\tlet xCell = Math.round(xDist / lengthKm);\n\t\t\tlet yCell = Math.round(yDist / lengthKm);\n\n\t\t\t// translate 2D index into 1D index\n\t\t\tlet i = (xCell * yCellLength) + yCell;\n\t\t\tif (i >= totalCells) i = totalCells - 1;\n\n\t\t\tif (grid.features[i].properties.count) {\n\t\t\t\tgrid.features[i].properties.count++\n\t\t\t} else {\n\t\t\t\tgrid.features[i].properties['count'] = 1;\n\t\t\t}\n\n\t\t});\n\n\t\tlet valid = 0;\n\t\tgrid.features.forEach((f) => { if (f.properties.count > 0) valid++; });\n\n\t\t// USE EACH CELL AS A HEATMAP DATA POINT\n\t\tlet heatmapCells = [];\n\t\tgrid.features.forEach((f) => {\n\t\t\tif (f.properties.count) {\n\t\t\t\tlet centroid = turf.centroid(f);\n\t\t\t\theatmapCells.push({\n\t\t\t\t\tlat:   centroid.geometry.coordinates[1],\n\t\t\t\t\tlng:   centroid.geometry.coordinates[0],\n\t\t\t\t\tvalue: f.properties.count\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn heatmapCells;\n\t}\n});\n\nHeatBin.CSS_TRANSFORM = (function() {\n\tvar div = document.createElement('div');\n\tvar props = [\n\t\t'transform',\n\t\t'WebkitTransform',\n\t\t'MozTransform',\n\t\t'OTransform',\n\t\t'msTransform'\n\t];\n\n\tfor (var i = 0; i < props.length; i++) {\n\t\tvar prop = props[i];\n\t\tif (div.style[prop] !== undefined) {\n\t\t\treturn prop;\n\t\t}\n\t}\n\treturn props[0];\n})();\n\nL.heatBin = function (options) {\n\treturn new HeatBin(options);\n};\n\nexport default L.heatBin;\n\n"],"names":["HeatBin","L","Layer","Class","extend","initialize","config","cfg","_el","DomUtil","create","_data","_max","_min","container","onAdd","map","size","getSize","_map","_width","x","_height","y","style","width","height","position","_origin","layerPointToLatLng","Point","getPanes","overlayPane","appendChild","_heatmap","h337","on","_reset","_draw","addTo","addLayer","onRemove","removeChild","off","getLatLngBounds","data","length","latLngBounds","d","_latField","_lngField","update","bounds","zoom","scale","generatedData","max","min","getBounds","getZoom","Math","pow","setData","latLngPoints","radiusMultiplier","scaleRadius","localMax","localMin","valueField","len","entry","value","latlng","contains","point","latLngToContainerPoint","latlngPoint","round","radius","fixedRadius","radiusMeters","_getPixelRadius","push","useLocalExtrema","options","_maxFactor","heatBin","maxFactor","latField","lngField","_valueField","self","enabled","_cellSizeKm","cellSizeKm","_computeHeatmapGrid","reduce","a","b","LatLng","dataObj","mapPane","_leaflet_pos","CSS_TRANSFORM","centerLatLng","getCenter","pointC","pointX","latLngC","containerPointToLatLng","latLngX","distanceX","distanceTo","pixels","_renderer","setDimensions","bbox","getWest","getNorth","getEast","getSouth","bottomLeft","bottomRight","topLeft","lengthKm","grid","turf","squareGrid","units","features","reverse","forEach","f","index","properties","console","log","showBinGrid","geoJSON","feature","weight","fill","onEachFeature","layer","bindTooltip","xGridLength","distance","yGridLength","xCellLength","floor","yCellLength","totalCells","points","lat","lng","p","xDist","yDist","xCell","yCell","i","count","valid","heatmapCells","centroid","geometry","coordinates","div","document","createElement","props","prop","undefined"],"mappings":";;;;;;;;;CAGA,MAAMA,UAAU,CAACC,EAAEC,KAAF,GAAUD,EAAEC,KAAZ,GAAoBD,EAAEE,KAAvB,EAA8BC,MAA9B,CAAqC;;CAEpD;;CAEAC,aAAY,UAAUC,MAAV,EAAkB;CAC7B,OAAKC,GAAL,GAAWD,MAAX;CACA,OAAKE,GAAL,GAAWP,EAAEQ,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,mBAAxB,CAAX;CACA,OAAKC,KAAL,GAAa,EAAb;CACA,OAAKC,IAAL,GAAY,CAAZ;CACA,OAAKC,IAAL,GAAY,CAAZ;CACA,OAAKN,GAAL,CAASO,SAAT,GAAqB,KAAKN,GAA1B;CACA,EAXmD;;CAapDO,QAAO,UAAUC,GAAV,EAAe;CACrB,MAAIC,OAAOD,IAAIE,OAAJ,EAAX;;CAEA,OAAKC,IAAL,GAAYH,GAAZ;;CAEA,OAAKI,MAAL,GAAcH,KAAKI,CAAnB;CACA,OAAKC,OAAL,GAAeL,KAAKM,CAApB;;CAEA,OAAKf,GAAL,CAASgB,KAAT,CAAeC,KAAf,GAAuBR,KAAKI,CAAL,GAAS,IAAhC;CACA,OAAKb,GAAL,CAASgB,KAAT,CAAeE,MAAf,GAAwBT,KAAKM,CAAL,GAAS,IAAjC;CACA,OAAKf,GAAL,CAASgB,KAAT,CAAeG,QAAf,GAA0B,UAA1B;;CAEA,OAAKC,OAAL,GAAe,KAAKT,IAAL,CAAUU,kBAAV,CAA6B,IAAI5B,EAAE6B,KAAN,CAAY,CAAZ,EAAe,CAAf,CAA7B,CAAf;;CAEAd,MAAIe,QAAJ,GAAeC,WAAf,CAA2BC,WAA3B,CAAuC,KAAKzB,GAA5C;;CAEA,MAAI,CAAC,KAAK0B,QAAV,EAAoB;CACnB,QAAKA,QAAL,GAAgBC,KAAKzB,MAAL,CAAY,KAAKH,GAAjB,CAAhB;CACA;;CAED;CACA;CACAS,MAAIoB,EAAJ,CAAO,SAAP,EAAkB,KAAKC,MAAvB,EAA+B,IAA/B;CACA,OAAKC,KAAL;CACA,EArCmD;;CAuCpDC,QAAO,UAAUvB,GAAV,EAAe;CACrBA,MAAIwB,QAAJ,CAAa,IAAb;CACA,SAAO,IAAP;CACA,EA1CmD;;CA4CpDC,WAAU,UAAUzB,GAAV,EAAe;CACxB;CACAA,MAAIe,QAAJ,GAAeC,WAAf,CAA2BU,WAA3B,CAAuC,KAAKlC,GAA5C;CACAQ,MAAI2B,GAAJ,CAAQ,SAAR,EAAmB,KAAKN,MAAxB,EAAgC,IAAhC;CACA,EAhDmD;;CAkDpD;;CAEA;;;CAGAO,iBAAiBC,IAAjB,EAAuB;CACtBA,SAAOA,QAAQ,KAAKlC,KAApB;CACA,MAAIkC,KAAKC,MAAL,GAAc,CAAlB,EAAqB,OAAO,IAAP;CACrB,SAAO7C,EAAE8C,YAAF,CAAeF,KAAK7B,GAAL,CAAUgC,CAAD,IAAO;CACrC,UAAO,CAACA,EAAE,KAAKC,SAAP,CAAD,EAAoBD,EAAE,KAAKE,SAAP,CAApB,CAAP;CACA,GAFqB,CAAf,CAAP;CAGA,EA7DmD;;CA+DpDC,SAAQ,YAAW;;CAElB,MAAIC,MAAJ,EAAYC,IAAZ,EAAkBC,KAAlB;CACA,MAAIC,gBAAgB,EAAEC,KAAK,KAAK5C,IAAZ,EAAkB6C,KAAK,KAAK5C,IAA5B,EAAkCgC,MAAM,EAAxC,EAApB;;CAEAO,WAAS,KAAKjC,IAAL,CAAUuC,SAAV,EAAT;CACAL,SAAO,KAAKlC,IAAL,CAAUwC,OAAV,EAAP;CACAL,UAAQM,KAAKC,GAAL,CAAS,CAAT,EAAYR,IAAZ,CAAR;;CAEA,MAAI,KAAK1C,KAAL,CAAWmC,MAAX,IAAqB,CAAzB,EAA4B;CAC3B,OAAI,KAAKZ,QAAT,EAAmB;CAClB,SAAKA,QAAL,CAAc4B,OAAd,CAAsBP,aAAtB;CACA;CACD;CACA;;CAED,MAAIQ,eAAe,EAAnB;CACA,MAAIC,mBAAmB,KAAKzD,GAAL,CAAS0D,WAAT,GAAuBX,KAAvB,GAA+B,CAAtD;CACA,MAAIY,WAAW,CAAf;CACA,MAAIC,WAAW,CAAf;CACA,MAAIC,aAAa,KAAK7D,GAAL,CAAS6D,UAA1B;CACA,MAAIC,MAAM,KAAK1D,KAAL,CAAWmC,MAArB;;CAEA,SAAOuB,KAAP,EAAc;CACb,OAAIC,QAAQ,KAAK3D,KAAL,CAAW0D,GAAX,CAAZ;CACA,OAAIE,QAAQD,MAAMF,UAAN,CAAZ;CACA,OAAII,SAASF,MAAME,MAAnB;;CAGA;CACA,OAAI,CAACpB,OAAOqB,QAAP,CAAgBD,MAAhB,CAAL,EAA8B;CAC7B;CACA;CACD;CACAN,cAAWN,KAAKJ,GAAL,CAASe,KAAT,EAAgBL,QAAhB,CAAX;CACAC,cAAWP,KAAKH,GAAL,CAASc,KAAT,EAAgBJ,QAAhB,CAAX;;CAEA,OAAIO,QAAQ,KAAKvD,IAAL,CAAUwD,sBAAV,CAAiCH,MAAjC,CAAZ;CACA,OAAII,cAAc,EAAEvD,GAAGuC,KAAKiB,KAAL,CAAWH,MAAMrD,CAAjB,CAAL,EAA0BE,GAAGqC,KAAKiB,KAAL,CAAWH,MAAMnD,CAAjB,CAA7B,EAAlB;CACAqD,eAAYR,UAAZ,IAA0BG,KAA1B;;CAEA,OAAIO,MAAJ;;CAEA,OAAI,KAAKvE,GAAL,CAASwE,WAAT,IAAwB,KAAKxE,GAAL,CAASyE,YAArC,EAAmD;CAClDF,aAAS,KAAKG,eAAL,EAAT;CACA,IAFD,MAEO,IAAIX,MAAMQ,MAAV,EAAkB;CACxBA,aAASR,MAAMQ,MAAN,GAAed,gBAAxB;CACA,IAFM,MAEA;CACNc,aAAS,CAAC,KAAKvE,GAAL,CAASuE,MAAT,IAAmB,CAApB,IAAyBd,gBAAlC;CACA;CACDY,eAAYE,MAAZ,GAAqBA,MAArB;CACAf,gBAAamB,IAAb,CAAkBN,WAAlB;CACA;CACD,MAAI,KAAKrE,GAAL,CAAS4E,eAAb,EAA8B;CAC7B5B,iBAAcC,GAAd,GAAoBU,QAApB;CACAX,iBAAcE,GAAd,GAAoBU,QAApB;CACA;;CAEDZ,gBAAcV,IAAd,GAAqBkB,YAArB;CACA,OAAK7B,QAAL,CAAc4B,OAAd,CAAsBP,aAAtB;CACA,EA3HmD;;CA6HpDO,UAAS,UAASsB,OAAT,EAAkB;;CAE1B,OAAKxE,IAAL,GAAYwE,QAAQ5B,GAAR,IAAe,KAAK5C,IAAhC;CACA,OAAKC,IAAL,GAAYuE,QAAQ3B,GAAR,IAAe,KAAK5C,IAAhC;CACA,OAAKwE,UAAL,GAAkB,KAAK9E,GAAL,CAAS+E,OAAT,IAAoB,KAAK/E,GAAL,CAAS+E,OAAT,CAAiBC,SAArC,GAAiD,KAAKhF,GAAL,CAAS+E,OAAT,CAAiBC,SAAlE,GAA8E,CAAhG;CACA,OAAKtC,SAAL,GAAiB,KAAK1C,GAAL,CAASiF,QAAT,IAAqB,KAAtC;CACA,OAAKtC,SAAL,GAAiB,KAAK3C,GAAL,CAASkF,QAAT,IAAqB,KAAtC;CACA,OAAKC,WAAL,GAAmB,KAAKnF,GAAL,CAAS6D,UAAT,IAAuB,OAA1C;CACA,QAAMuB,OAAO,IAAb;CACA,MAAI9C,OAAOuC,QAAQvC,IAAnB;;CAEA;CACA,MAAIA,KAAKC,MAAL,GAAc,CAAd,IAAmB,KAAKvC,GAAL,CAAS+E,OAA5B,IAAuC,KAAK/E,GAAL,CAAS+E,OAAT,CAAiBM,OAA5D,EAAoE;CACnE,QAAKC,WAAL,GAAmB,KAAKtF,GAAL,CAAS+E,OAAT,CAAiBQ,UAAjB,IAA+B,CAAlD;CACAjD,UAAO,KAAKkD,mBAAL,CAAyBlD,IAAzB,CAAP;CACA,QAAKjC,IAAL,GAAYiC,KAAK7B,GAAL,CAAUgC,CAAD,IAAO;CAAE,WAAOA,EAAEuB,KAAT;CAAiB,IAAnC,EAAqCyB,MAArC,CAA4C,UAASC,CAAT,EAAYC,CAAZ,EAAe;CAAE,WAAOtC,KAAKJ,GAAL,CAASyC,CAAT,EAAYC,CAAZ,CAAP;CAAwB,IAArF,IAAyF,KAAKb,UAA1G;CACA;;CAED,MAAIhB,MAAMxB,KAAKC,MAAf;CACA,MAAIE,IAAI,EAAR;;CAEA;CACA,SAAOqB,KAAP,EAAc;CACb,OAAIC,QAAQzB,KAAKwB,GAAL,CAAZ;CACA,OAAIG,SAAS,IAAIvE,EAAEkG,MAAN,CAAa7B,MAAMqB,KAAK1C,SAAX,CAAb,EAAoCqB,MAAMqB,KAAKzC,SAAX,CAApC,CAAb;CACA,OAAIkD,UAAU,EAAE5B,QAAQA,MAAV,EAAd;CACA4B,WAAQT,KAAKD,WAAb,IAA4BpB,MAAMqB,KAAKD,WAAX,CAA5B;CACA,OAAIpB,MAAMQ,MAAV,EAAkB;CACjBsB,YAAQtB,MAAR,GAAiBR,MAAMQ,MAAvB;CACA;CACD9B,KAAEkC,IAAF,CAAOkB,OAAP;CACA;;CAED,OAAKzF,KAAL,GAAaqC,CAAb;CACA,OAAKV,KAAL;CACA,EAhKmD;;CAkKpD;;CAEAA,QAAO,YAAW;CACjB,MAAI,CAAC,KAAKnB,IAAV,EAAgB;CAAE;CAAS;;CAE3B,MAAIkF,UAAU,KAAKlF,IAAL,CAAUY,QAAV,GAAqBsE,OAAnC;CACA,MAAI3B,QAAQ2B,QAAQC,YAApB;;CAEA;CACA,OAAK9F,GAAL,CAASgB,KAAT,CAAexB,QAAQuG,aAAvB,IAAwC,eACvC,CAAC3C,KAAKiB,KAAL,CAAWH,MAAMrD,CAAjB,CADsC,GAChB,KADgB,GAEvC,CAACuC,KAAKiB,KAAL,CAAWH,MAAMnD,CAAjB,CAFsC,GAEhB,KAFxB;;CAIA,OAAK4B,MAAL;CACA,EAhLmD;;CAkLpD8B,kBAAiB,YAAY;;CAE5B,MAAIuB,eAAe,KAAKrF,IAAL,CAAUsF,SAAV,EAAnB;CACA,MAAIC,SAAS,KAAKvF,IAAL,CAAUwD,sBAAV,CAAiC6B,YAAjC,CAAb;CACA,MAAIG,SAAS,CAACD,OAAOrF,CAAP,GAAW,CAAZ,EAAeqF,OAAOnF,CAAtB,CAAb;;CAEA;CACA,MAAIqF,UAAU,KAAKzF,IAAL,CAAU0F,sBAAV,CAAiCH,MAAjC,CAAd;CACA,MAAII,UAAU,KAAK3F,IAAL,CAAU0F,sBAAV,CAAiCF,MAAjC,CAAd;;CAEA;CACA,MAAII,YAAYH,QAAQI,UAAR,CAAmBF,OAAnB,CAAhB;CACA;CACA,MAAIG,SAAS,KAAK1G,GAAL,CAASyE,YAAT,GAAwB+B,SAArC;;CAEA,SAAOE,UAAU,CAAV,GAAcA,MAAd,GAAuB,CAA9B;CACA,EAlMmD;;CAoMpD5E,SAAQ,YAAY;CACnB,OAAKT,OAAL,GAAe,KAAKT,IAAL,CAAUU,kBAAV,CAA6B,IAAI5B,EAAE6B,KAAN,CAAY,CAAZ,EAAe,CAAf,CAA7B,CAAf;;CAEA,MAAIb,OAAO,KAAKE,IAAL,CAAUD,OAAV,EAAX;CACA,MAAI,KAAKE,MAAL,KAAgBH,KAAKI,CAArB,IAA0B,KAAKC,OAAL,KAAiBL,KAAKM,CAApD,EAAuD;CACtD,QAAKH,MAAL,GAAeH,KAAKI,CAApB;CACA,QAAKC,OAAL,GAAeL,KAAKM,CAApB;;CAEA,QAAKf,GAAL,CAASgB,KAAT,CAAeC,KAAf,GAAuB,KAAKL,MAAL,GAAc,IAArC;CACA,QAAKZ,GAAL,CAASgB,KAAT,CAAeE,MAAf,GAAwB,KAAKJ,OAAL,GAAe,IAAvC;;CAEA,QAAKY,QAAL,CAAcgF,SAAd,CAAwBC,aAAxB,CAAsC,KAAK/F,MAA3C,EAAmD,KAAKE,OAAxD;CACA;CACD,OAAKgB,KAAL;CACA,EAlNmD;;CAoNpDyD,qBAAqBlD,IAArB,EAA2B;;CAE1B;CACA,QAAMO,SAAS,KAAKR,eAAL,CAAqBC,IAArB,CAAf;CACA,MAAI,CAACO,MAAL,EAAa,OAAO,KAAP;;CAEb;CACA,QAAMgE,OAAO,CACZhE,OAAOiE,OAAP,EADY,EAEZjE,OAAOkE,QAAP,EAFY,EAGZlE,OAAOmE,OAAP,EAHY,EAIZnE,OAAOoE,QAAP,EAJY,CAAb;;CAOA,QAAMC,aAAa,CAACrE,OAAOiE,OAAP,EAAD,EAAmBjE,OAAOoE,QAAP,EAAnB,CAAnB;CACA,QAAME,cAAc,CAACtE,OAAOmE,OAAP,EAAD,EAAmBnE,OAAOoE,QAAP,EAAnB,CAApB;CACA,QAAMG,UAAU,CAACvE,OAAOiE,OAAP,EAAD,EAAmBjE,OAAOkE,QAAP,EAAnB,CAAhB;;CAEA;CACA;CACA;CACA;CACA,QAAMM,WAAW,KAAK/B,WAAtB;CACA,QAAMgC,OAAOC,KAAKC,UAAL,CAAgBX,IAAhB,EAAsBQ,QAAtB,EAAgC,EAAEI,OAAO,YAAT,EAAhC,CAAb;;CAEAH,OAAKI,QAAL,CAAcC,OAAd;CACAL,OAAKI,QAAL,CAAcE,OAAd,CAAsB,CAACC,CAAD,EAAIC,KAAJ,KAAc;CAAED,KAAEE,UAAF,CAAa,OAAb,IAAwBD,KAAxB;CAAgC,GAAtE;CACAE,UAAQC,GAAR,CAAYX,IAAZ;;CAEA;CACA,MAAI,KAAKtH,GAAL,CAAS+E,OAAT,IAAoB,KAAK/E,GAAL,CAAS+E,OAAT,CAAiBmD,WAAzC,EAAsD;CACrDxI,KAAEyI,OAAF,CAAUb,IAAV,EAAgB;CACfrG,WAAO,UAAUmH,OAAV,EAAmB;CACzB,YAAO;CACNC,cAAQ,CADF;CAENC,YAAM;CAFA,MAAP;CAIA,KANc;CAOfC,mBAAe,UAAUH,OAAV,EAAmBI,KAAnB,EAA0B;CACxCA,WAAMC,WAAN,CAAmB,eAAcL,QAAQL,UAAR,CAAmBD,KAAM,EAA1D;CACA;CATc,IAAhB,EAUG9F,KAVH,CAUS,KAAKpB,IAVd;CAWA;;CAED;CACA,QAAM8H,cAAcnB,KAAKoB,QAAL,CAAcpB,KAAKpD,KAAL,CAAW+C,UAAX,CAAd,EAAsCK,KAAKpD,KAAL,CAAWgD,WAAX,CAAtC,EAA+D,EAAEM,OAAO,YAAT,EAA/D,CAApB;CACA,QAAMmB,cAAcrB,KAAKoB,QAAL,CAAcpB,KAAKpD,KAAL,CAAW+C,UAAX,CAAd,EAAsCK,KAAKpD,KAAL,CAAWiD,OAAX,CAAtC,EAA2D,EAAEK,OAAO,YAAT,EAA3D,CAApB;CACAO,UAAQC,GAAR,CAAa,eAAcS,WAAY,iBAAgBE,WAAY,EAAnE;;CAEA;CACA,QAAMC,cAAcxF,KAAKyF,KAAL,CAAWJ,cAAcrB,QAAzB,CAApB;CACA,QAAM0B,cAAc1F,KAAKyF,KAAL,CAAWF,cAAcvB,QAAzB,CAApB;CACA,QAAM2B,aAAaH,cAAcE,WAAjC;CACAf,UAAQC,GAAR,CAAa,eAAcY,WAAY,iBAAgBE,WAAY,EAAnE;CACAf,UAAQC,GAAR,CAAa,gBAAee,UAAW,EAAvC;;CAEA;CACA,QAAMC,SAAS3G,KAAK7B,GAAL,CAAUgC,CAAD,IAAO;CAAE,UAAO;CACvCyG,SAAKzG,EAAE,KAAKC,SAAP,CADkC;CAEvCyG,SAAK1G,EAAE,KAAKE,SAAP;CAFkC,IAAP;CAG7B,GAHW,CAAf;;CAKA;CACAsG,SAAOrB,OAAP,CAAgBwB,CAAD,IAAO;;CAErB;CACA,SAAMC,QAAQ9B,KAAKoB,QAAL,CACbpB,KAAKpD,KAAL,CAAW,CAACiF,EAAED,GAAH,EAAQC,EAAEF,GAAV,CAAX,CADa,EAEb3B,KAAKpD,KAAL,CAAW,CAACtB,OAAOmE,OAAP,EAAD,EAAmBoC,EAAEF,GAArB,CAAX,CAFa,EAGb,EAAEzB,OAAO,YAAT,EAHa,CAAd;CAKA;CACA,SAAM6B,QAAQ/B,KAAKoB,QAAL,CACbpB,KAAKpD,KAAL,CAAW,CAACiF,EAAED,GAAH,EAAQC,EAAEF,GAAV,CAAX,CADa,EAEb3B,KAAKpD,KAAL,CAAW,CAACiF,EAAED,GAAH,EAAQtG,OAAOoE,QAAP,EAAR,CAAX,CAFa,EAGb,EAAEQ,OAAO,YAAT,EAHa,CAAd;;CAMA;CACA,OAAI8B,QAAQlG,KAAKiB,KAAL,CAAW+E,QAAQhC,QAAnB,CAAZ;CACA,OAAImC,QAAQnG,KAAKiB,KAAL,CAAWgF,QAAQjC,QAAnB,CAAZ;;CAEA;CACA,OAAIoC,IAAKF,QAAQR,WAAT,GAAwBS,KAAhC;CACA,OAAIC,KAAKT,UAAT,EAAqBS,IAAIT,aAAa,CAAjB;;CAErB,OAAI1B,KAAKI,QAAL,CAAc+B,CAAd,EAAiB1B,UAAjB,CAA4B2B,KAAhC,EAAuC;CACtCpC,SAAKI,QAAL,CAAc+B,CAAd,EAAiB1B,UAAjB,CAA4B2B,KAA5B;CACA,IAFD,MAEO;CACNpC,SAAKI,QAAL,CAAc+B,CAAd,EAAiB1B,UAAjB,CAA4B,OAA5B,IAAuC,CAAvC;CACA;CAED,GA7BD;CAgCAT,OAAKI,QAAL,CAAcE,OAAd,CAAuBC,CAAD,IAAO;CAAE,OAAIA,EAAEE,UAAF,CAAa2B,KAAb,GAAqB,CAAzB,EAA4BC;CAAU,GAArE;;CAEA;CACA,MAAIC,eAAe,EAAnB;CACAtC,OAAKI,QAAL,CAAcE,OAAd,CAAuBC,CAAD,IAAO;CAC5B,OAAIA,EAAEE,UAAF,CAAa2B,KAAjB,EAAwB;CACvB,QAAIG,WAAWtC,KAAKsC,QAAL,CAAchC,CAAd,CAAf;CACA+B,iBAAajF,IAAb,CAAkB;CACjBuE,UAAOW,SAASC,QAAT,CAAkBC,WAAlB,CAA8B,CAA9B,CADU;CAEjBZ,UAAOU,SAASC,QAAT,CAAkBC,WAAlB,CAA8B,CAA9B,CAFU;CAGjB/F,YAAO6D,EAAEE,UAAF,CAAa2B;CAHH,KAAlB;CAKA;CACD,GATD;;CAWA,SAAOE,YAAP;CACA;CAnUmD,CAArC,CAAhB;;CAsUAnK,QAAQuG,aAAR,GAAyB,YAAW;CACnC,KAAIgE,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAV;CACA,KAAIC,QAAQ,CACX,WADW,EAEX,iBAFW,EAGX,cAHW,EAIX,YAJW,EAKX,aALW,CAAZ;;CAQA,MAAK,IAAIV,IAAI,CAAb,EAAgBA,IAAIU,MAAM5H,MAA1B,EAAkCkH,GAAlC,EAAuC;CACtC,MAAIW,OAAOD,MAAMV,CAAN,CAAX;CACA,MAAIO,IAAI/I,KAAJ,CAAUmJ,IAAV,MAAoBC,SAAxB,EAAmC;CAClC,UAAOD,IAAP;CACA;CACD;CACD,QAAOD,MAAM,CAAN,CAAP;CACA,CAjBuB,EAAxB;;CAmBAzK,EAAEqF,OAAF,GAAY,UAAUF,OAAV,EAAmB;CAC9B,QAAO,IAAIpF,OAAJ,CAAYoF,OAAZ,CAAP;CACA,CAFD;;AAIA,iBAAenF,EAAEqF,OAAjB;;;;;;;;"}