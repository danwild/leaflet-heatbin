{"version":3,"file":"leaflet-heatbin.js","sources":["../src/L.HeatBin.js"],"sourcesContent":["import h337 from 'heatmap.js';\nimport turf from '@turf/turf';\n\nconst HeatBin = (L.Layer ? L.Layer : L.Class).extend({\n\n\t/*--------------------------------------------- LEAFLET HOOKS ---------------------------------------------*/\n\n\tinitialize: function (config) {\n\t\tthis.cfg = config;\n\t\tthis._el = L.DomUtil.create('div', 'leaflet-zoom-hide');\n\t\tthis._data = [];\n\t\tthis._max = 1;\n\t\tthis._min = 0;\n\t\tthis.cfg.container = this._el;\n\n\t\tthis._gridBBOX = null;\n\t\tthis._xCellLength = null;\n\t\tthis._yCellLength = null;\n\t\tthis._totalGridCells = null;\n\t},\n\n\tonAdd: function (map) {\n\t\tvar size = map.getSize();\n\n\t\tthis._map = map;\n\n\t\tthis._width = size.x;\n\t\tthis._height = size.y;\n\n\t\tthis._el.style.width = size.x + 'px';\n\t\tthis._el.style.height = size.y + 'px';\n\t\tthis._el.style.position = 'absolute';\n\t\tthis._origin = this._map.layerPointToLatLng(new L.Point(0, 0));\n\n\t\tmap.getPanes().overlayPane.appendChild(this._el);\n\n\t\tif (!this._heatmap) {\n\t\t\tthis._heatmap = h337.create(this.cfg);\n\t\t}\n\n\t\tthis._isActive = true;\n\n\t\t// this resets the origin and redraws whenever\n\t\t// the zoom changed or the map has been moved\n\t\tmap.on('moveend', this._reset, this);\n\t\tthis._draw();\n\t},\n\n\taddTo: function (map) {\n\t\tmap.addLayer(this);\n\t\treturn this;\n\t},\n\n\tonRemove: function (map) {\n\t\t// remove layer's DOM elements and listeners\n\t\tmap.getPanes().overlayPane.removeChild(this._el);\n\t\tmap.off('moveend', this._reset, this);\n\t\tthis._isActive = false;\n\t},\n\n\t/*--------------------------------------------- PUBLIC ---------------------------------------------*/\n\n\tisActive: function () {\n\t\treturn this._isActive;\n\t},\n\n\t/**\n\t * Returns leaflet LatLngBounds of the layer data\n\t */\n\tgetLatLngBounds (data) {\n\t\tdata = data || this._data;\n\t\tif (data.length < 1) return null;\n\t\treturn L.latLngBounds(data.map((d) => {\n\t\t\treturn [d[this._latField], d[this._lngField]];\n\t\t}));\n\t},\n\n\tupdate: function () {\n\n\t\tvar bounds, zoom, scale;\n\t\tvar generatedData = { max: this._max, min: this._min, data: [] };\n\n\t\tbounds = this._map.getBounds();\n\t\tzoom = this._map.getZoom();\n\t\tscale = Math.pow(2, zoom);\n\n\t\tif (this._data.length == 0) {\n\t\t\tif (this._heatmap) {\n\t\t\t\tthis._heatmap.setData(generatedData);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tvar latLngPoints = [];\n\t\tvar radiusMultiplier = this.cfg.scaleRadius ? scale : 1;\n\t\tvar localMax = 0;\n\t\tvar localMin = 0;\n\t\tvar valueField = this.cfg.valueField;\n\t\tvar len = this._data.length;\n\n\t\twhile (len--) {\n\t\t\tvar entry = this._data[len];\n\t\t\tvar value = entry[valueField];\n\t\t\tvar latlng = entry.latlng;\n\n\n\t\t\t// we don't wanna render points that are not even on the map ;-)\n\t\t\tif (!bounds.contains(latlng)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// local max is the maximum within current bounds\n\t\t\tlocalMax = Math.max(value, localMax);\n\t\t\tlocalMin = Math.min(value, localMin);\n\n\t\t\tvar point = this._map.latLngToContainerPoint(latlng);\n\t\t\tvar latlngPoint = { x: Math.round(point.x), y: Math.round(point.y) };\n\t\t\tlatlngPoint[valueField] = value;\n\n\t\t\tvar radius;\n\n\t\t\tif (this.cfg.fixedRadius && this.cfg.radiusMeters) {\n\t\t\t\tradius = this._getPixelRadius();\n\t\t\t} else if (entry.radius) {\n\t\t\t\tradius = entry.radius * radiusMultiplier;\n\t\t\t} else {\n\t\t\t\tradius = (this.cfg.radius || 2) * radiusMultiplier;\n\t\t\t}\n\t\t\tlatlngPoint.radius = radius;\n\t\t\tlatLngPoints.push(latlngPoint);\n\t\t}\n\t\tif (this.cfg.useLocalExtrema) {\n\t\t\tgeneratedData.max = localMax;\n\t\t\tgeneratedData.min = localMin;\n\t\t}\n\n\t\tgeneratedData.data = latLngPoints;\n\t\tthis._heatmap.setData(generatedData);\n\t},\n\n\tsetData: function (options) {\n\n\t\tthis._max = options.max || this._max;\n\t\tthis._min = options.min || this._min;\n\t\tthis._maxFactor = this.cfg.heatBin && this.cfg.heatBin.maxFactor ? this.cfg.heatBin.maxFactor : 1;\n\t\tthis._latField = this.cfg.latField || 'lat';\n\t\tthis._lngField = this.cfg.lngField || 'lng';\n\t\tthis._valueField = this.cfg.valueField || 'value';\n\t\tconst self = this;\n\t\tvar data = options.data;\n\n\t\t// compute grid if we're binning\n\t\tif (data.length > 0 && this.cfg.heatBin && this.cfg.heatBin.enabled){\n\t\t\tthis._cellSizeKm = this.cfg.heatBin.cellSizeKm || 5;\n\t\t\tdata = this._computeHeatmapGrid(data);\n\t\t\tthis._max = data.map((d) => { return d.value; }).reduce(function(a, b) { return Math.max(a, b); }) * this._maxFactor;\n\t\t}\n\n\t\tvar len = data.length;\n\t\tvar d = [];\n\n\t\t// transform data to latlngs\n\t\twhile (len--) {\n\t\t\tvar entry = data[len];\n\t\t\tvar latlng = new L.LatLng(entry[self._latField], entry[self._lngField]);\n\t\t\tvar dataObj = { latlng: latlng };\n\t\t\tdataObj[self._valueField] = entry[self._valueField];\n\t\t\tif (entry.radius) {\n\t\t\t\tdataObj.radius = entry.radius;\n\t\t\t}\n\t\t\td.push(dataObj);\n\t\t}\n\n\t\tthis._data = d;\n\t\tthis._draw();\n\t},\n\n\t/**\n\t * Returns information about the heatBin grid\n\t */\n\tgetGridInfo: function() {\n\t\treturn {\n\t\t\tbbox:            this._gridBBOX,\n\t\t\txCellLength:     this._xCellLength,\n\t\t\tyCellLength:     this._yCellLength,\n\t\t\ttotalCellLength: this._totalGridCells,\n\t\t\tmaxFactor:       this._maxFactor,\n\t\t\tminCellCount:    this._minCellCount,\n\t\t\tmaxCellCount:    this._maxCellCount\n\t\t}\n\t},\n\n\t/*--------------------------------------------- PRIVATE ---------------------------------------------*/\n\n\t_draw: function() {\n\t\tif (!this._map) { return; }\n\n\t\tvar mapPane = this._map.getPanes().mapPane;\n\t\tvar point = mapPane._leaflet_pos;\n\n\t\t// reposition the layer\n\t\tthis._el.style[HeatBin.CSS_TRANSFORM] = 'translate(' +\n\t\t\t-Math.round(point.x) + 'px,' +\n\t\t\t-Math.round(point.y) + 'px)';\n\n\t\tthis.update();\n\t},\n\n\t_getPixelRadius: function () {\n\n\t\tvar centerLatLng = this._map.getCenter();\n\t\tvar pointC = this._map.latLngToContainerPoint(centerLatLng);\n\t\tvar pointX = [pointC.x + 1, pointC.y];\n\n\t\t// convert containerpoints to latlng's\n\t\tvar latLngC = this._map.containerPointToLatLng(pointC);\n\t\tvar latLngX = this._map.containerPointToLatLng(pointX);\n\n\t\t// Assuming distance only depends on latitude\n\t\tvar distanceX = latLngC.distanceTo(latLngX);\n\t\t// 100 meters is the fixed distance here\n\t\tvar pixels = this.cfg.radiusMeters / distanceX;\n\n\t\treturn pixels >= 1 ? pixels : 1;\n\t},\n\n\t_reset: function () {\n\t\tthis._origin = this._map.layerPointToLatLng(new L.Point(0, 0));\n\n\t\tvar size = this._map.getSize();\n\t\tif (this._width !== size.x || this._height !== size.y) {\n\t\t\tthis._width  = size.x;\n\t\t\tthis._height = size.y;\n\n\t\t\tthis._el.style.width = this._width + 'px';\n\t\t\tthis._el.style.height = this._height + 'px';\n\n\t\t\tthis._heatmap._renderer.setDimensions(this._width, this._height);\n\t\t}\n\t\tthis._draw();\n\t},\n\n\t_computeHeatmapGrid (data) {\n\n\t\t// CREATE BBOX\n\t\tconst bounds = this.getLatLngBounds(data);\n\t\tif (!bounds) return false;\n\n\t\t// minX, minY, maxX, maxY\n\t\tconst bbox = [\n\t\t\tbounds.getWest(),\n\t\t\tbounds.getNorth(),\n\t\t\tbounds.getEast(),\n\t\t\tbounds.getSouth()\n\t\t];\n\n\t\t// CREATE A GRID OF CELLS\n\t\t// GRID origin is bottomRight\n\t\t// the indexes increment by:\n\t\t// xCol=0, yRow upwards, then xCol=1 etc.\n\t\tconst lengthKm = this._cellSizeKm;\n\t\tconst grid = turf.squareGrid(bbox, lengthKm, { units: 'kilometers' });\n\n\t\tgrid.features.reverse();\n\t\tgrid.features.forEach((f, index) => { f.properties['index'] = index; });\n\n\t\t// DEBUG - plot the binning grid on map\n\t\tif (this.cfg.heatBin && this.cfg.heatBin.showBinGrid) {\n\t\t\tL.geoJSON(grid, {\n\t\t\t\tstyle: function (feature) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tweight: 1,\n\t\t\t\t\t\topacity: 0.7,\n\t\t\t\t\t\tfill: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonEachFeature: function (feature, layer) {\n\t\t\t\t\tlayer.bindTooltip(`cell index: ${feature.properties.index}`);\n\t\t\t\t}\n\t\t\t}).addTo(this._map);\n\t\t}\n\n\t\t// minX, minY, maxX, maxY\n\t\tthis._gridBBOX = turf.bbox(grid);\n\n\t\t// calc XY lengths\n\t\t// change to use actual features..\n\t\tconst gridBottomLeft = turf.point([this._gridBBOX[0], this._gridBBOX[1]]);\n\t\tconst gridBottomRight = turf.point([this._gridBBOX[2], this._gridBBOX[1]]);\n\t\tconst gridTopLeft = turf.point([this._gridBBOX[0], this._gridBBOX[3]]);\n\t\tconst xGridLength = turf.distance(gridBottomLeft, gridBottomRight, { units: 'kilometers' });\n\t\tconst yGridLength = turf.distance(gridBottomLeft, gridTopLeft, { units: 'kilometers' });\n\n\t\t// calc XY cell length of grid\n\t\tthis._xCellLength = Math.round(xGridLength / lengthKm);\n\t\tthis._yCellLength = Math.round(yGridLength / lengthKm);\n\t\tthis._totalGridCells = this._xCellLength * this._yCellLength;\n\n\t\tconsole.log(`xGridLenth: ${this.xGridLength}, yGridLenth: ${this.yGridLength}`);\n\t\tconsole.log(`xCellLenth: ${this._xCellLength}, yCellLenth: ${this._yCellLength}`);\n\t\tconsole.log(`total cells: ${this._totalGridCells}`);\n\n\t\t// PUT EACH POINT INTO A CELL\n\t\tconst points = data.map((d) => { return {\n\t\t\tlat: d[this._latField],\n\t\t\tlng: d[this._lngField],\n\t\t\tuid: d['uid'] || null\n\t\t}; });\n\n\t\t// for each point get its offset from minX and minY\n\t\tpoints.forEach((p) => {\n\n\t\t\t// point dist from left\n\t\t\tlet xDist = turf.distance(\n\t\t\t\tturf.point([p.lng, p.lat]),\n\t\t\t\tturf.point([this._gridBBOX[2], p.lat]),\n\t\t\t\t{ units: 'kilometers' }\n\t\t\t);\n\t\t\t// point dist from bottom\n\t\t\tlet yDist = turf.distance(\n\t\t\t\tturf.point([p.lng, p.lat]),\n\t\t\t\tturf.point([p.lng, this._gridBBOX[1]]),\n\t\t\t\t{ units: 'kilometers' }\n\t\t\t);\n\t\t\t// points *can* fall outside the grid bounds, which doesn't\n\t\t\t// exactly match the data bounds, pull them back into nearest cell\n\t\t\tif (yDist > yGridLength) yDist = yGridLength - (lengthKm / 2);\n\t\t\tif (xDist > xGridLength) xDist = xGridLength - (lengthKm / 2);\n\n\t\t\t// find the XY cell indices\n\t\t\tlet xCell = Math.floor(xDist / lengthKm);\n\t\t\tlet yCell = Math.floor(yDist / lengthKm);\n\n\t\t\t// translate 2D index into 1D index\n\t\t\tlet i = (xCell * this._yCellLength) + yCell;\n\t\t\tif (i >= this._totalGridCells) return i = this._totalGridCells - 1;\n\n\t\t\t// only count unique if using uid\n\t\t\tif (grid.features[i].properties.count) {\n\t\t\t\tif (p.uid !== null && grid.features[i].properties.uids.indexOf(p.uid) === -1){\n\t\t\t\t\tgrid.features[i].properties.count++;\n\t\t\t\t\tgrid.features[i].properties.uids.push(p.uid);\n\t\t\t\t}\n\t\t\t// add first count\n\t\t\t} else {\n\t\t\t\tgrid.features[i].properties['count'] = 1;\n\t\t\t\tif (p.uid !== null) grid.features[i].properties.uids = [p.uid];\n\t\t\t}\n\n\t\t});\n\n\t\t// USE EACH CELL AS A HEATMAP DATA POINT\n\t\tlet heatmapCells = [];\n\n\t\tthis._minCellCount = 0;\n\t\tthis._maxCellCount = 0;\n\n\t\tgrid.features.forEach((f) => {\n\t\t\tif (f.properties.count) {\n\t\t\t\tlet centroid = turf.centroid(f);\n\n\t\t\t\tif (f.properties.count < this._minCellCount) this._minCellCount = f.properties.count;\n\t\t\t\tif (f.properties.count > this._maxCellCount) this._maxCellCount = f.properties.count;\n\n\t\t\t\theatmapCells.push({\n\t\t\t\t\tlat:   centroid.geometry.coordinates[1],\n\t\t\t\t\tlng:   centroid.geometry.coordinates[0],\n\t\t\t\t\tvalue: f.properties.count + 1\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn heatmapCells;\n\t}\n});\n\nHeatBin.CSS_TRANSFORM = (function() {\n\tvar div = document.createElement('div');\n\tvar props = [\n\t\t'transform',\n\t\t'WebkitTransform',\n\t\t'MozTransform',\n\t\t'OTransform',\n\t\t'msTransform'\n\t];\n\n\tfor (var i = 0; i < props.length; i++) {\n\t\tvar prop = props[i];\n\t\tif (div.style[prop] !== undefined) {\n\t\t\treturn prop;\n\t\t}\n\t}\n\treturn props[0];\n})();\n\nL.heatBin = function (options) {\n\treturn new HeatBin(options);\n};\n\nexport default L.heatBin;\n\n"],"names":["HeatBin","L","Layer","Class","extend","initialize","config","cfg","_el","DomUtil","create","_data","_max","_min","container","_gridBBOX","_xCellLength","_yCellLength","_totalGridCells","onAdd","map","size","getSize","_map","_width","x","_height","y","style","width","height","position","_origin","layerPointToLatLng","Point","getPanes","overlayPane","appendChild","_heatmap","h337","_isActive","on","_reset","_draw","addTo","addLayer","onRemove","removeChild","off","isActive","getLatLngBounds","data","length","latLngBounds","d","_latField","_lngField","update","bounds","zoom","scale","generatedData","max","min","getBounds","getZoom","Math","pow","setData","latLngPoints","radiusMultiplier","scaleRadius","localMax","localMin","valueField","len","entry","value","latlng","contains","point","latLngToContainerPoint","latlngPoint","round","radius","fixedRadius","radiusMeters","_getPixelRadius","push","useLocalExtrema","options","_maxFactor","heatBin","maxFactor","latField","lngField","_valueField","self","enabled","_cellSizeKm","cellSizeKm","_computeHeatmapGrid","reduce","a","b","LatLng","dataObj","getGridInfo","bbox","xCellLength","yCellLength","totalCellLength","minCellCount","_minCellCount","maxCellCount","_maxCellCount","mapPane","_leaflet_pos","CSS_TRANSFORM","centerLatLng","getCenter","pointC","pointX","latLngC","containerPointToLatLng","latLngX","distanceX","distanceTo","pixels","_renderer","setDimensions","getWest","getNorth","getEast","getSouth","lengthKm","grid","turf","squareGrid","units","features","reverse","forEach","f","index","properties","showBinGrid","geoJSON","feature","weight","opacity","fill","onEachFeature","layer","bindTooltip","gridBottomLeft","gridBottomRight","gridTopLeft","xGridLength","distance","yGridLength","console","log","points","lat","lng","uid","p","xDist","yDist","xCell","floor","yCell","i","count","uids","indexOf","heatmapCells","centroid","geometry","coordinates","div","document","createElement","props","prop","undefined"],"mappings":"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"}